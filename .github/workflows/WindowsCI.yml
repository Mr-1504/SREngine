name: SpaRcle Engine Windows CI

on:
  workflow_call:
    inputs:
      buildDebug:
        required: true
        type: string
      buildRelease:
        required: true
        type: string
      artifactPush:
        required: true
        type: string

jobs:  
  Preparing:
    name: Build.
    runs-on: windows-latest
    steps:
      - name: Fetching repository.
        uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 1

      - name: Installing Vulkan.
        uses: TWoolhouse/setup-vulkan-sdk@v1.1.0
        with:
         version: 1.3.211.0

      - name: Preparing MSVC.
        uses: ilammy/msvc-dev-cmd@v1
        with:
         arch: 'amd64'
         vsversion: '2022'

      - name: Updating submodules.
        run: git submodule --quiet update --init --recursive --depth 1 --jobs 4

      - name: Installing Ninja.
        uses: seanmiddleditch/gha-setup-ninja@master

      #- name: Installing Ninja.
      #  uses: ashutoshvarma/setup-ninja@v1.1
      #  with:
      #    version: '1.10.2'
      #    dest: '${{github.workspace}}/../ninja'

      - name: Creating Building Environment.
        run: |
         cmake -E make_directory ${{github.workspace}}/build-debug
         cmake -E make_directory ${{github.workspace}}/build-release
        
      - if: inputs.buildRelease == 'true'
        name: Building Release.
        shell: bash
        working-directory: ${{github.workspace}}/build-release
        run: |
          echo "releaseSuccessful=false" >> "$GITHUB_ENV"
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Release "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4
          echo "releaseSuccessful=true" >> "$GITHUB_ENV"

      - if: inputs.buildDebug == 'true'
        name: Building Debug.
        shell: bash
        working-directory: ${{github.workspace}}/build-debug
        run: |
          echo "debugSuccessful=false" >> "$GITHUB_ENV"
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4
          echo "debugSuccessful=true" >> "$GITHUB_ENV"
          
      - if: inputs.buildDebug == 'true'
        name: Creating a Debug build trace.
        shell: bash 
        working-directory: ${{github.workspace}}/CI
        run: python ninjatracing.py ../build-debug/.ninja_log > trace-debug.json
        
      - if: inputs.buildRelease == 'true'
        name: Creating a Release build trace.
        shell: bash 
        working-directory: ${{github.workspace}}/CI
        run: python ninjatracing.py ../build-release/.ninja_log > trace-release.json
        
      - if: inputs.buildDebug == 'true'
        name: Uploading a Debug build trace artifact.
        uses: actions/upload-artifact@v3
        with:
          name: 'SREngine Debug Windows Build Trace Artifact'
          path: '${{github.workspace}}/CI/trace-debug.json'
         
      - if: inputs.buildRelease == 'true'
        name: Uploading a Release build trace artifact.
        uses: actions/upload-artifact@v3
        with:
          name: 'SREngine Release Windows Build Trace Artifact'
          path: '${{github.workspace}}/CI/trace-release.json'

      - if: env.debugSuccessful == 'true'
        name: Creating Debug artifact.
        working-directory: ${{github.workspace}}/build-debug/Engine
        shell: bash
        run: |
          ls | grep "SREngine_" | xargs -I '{}' cp '{}' SREngineDebugBuild
        #shell: cmd
        #run: |
        #  mkdir SREngineReleaseBuild & for /f "delims=" %i in ('dir /b ^| findstr "SREngine_"') do copy "%i" SREngineDebugBuild

      - if: env.releaseSuccessful == 'true'
        name: Creating Release artifact.
        working-directory: ${{github.workspace}}/build-release/Engine
        shell: bash
        run: |
          ls | grep "SREngine_" | xargs -I '{}' cp '{}' SREngineReleaseBuild
        #shell: cmd
        #run: |
        #  mkdir SREngineReleaseBuild & for /f "delims=" %i in ('dir /b ^| findstr "SREngine_"') do copy "%i" SREngineReleaseBuild

      - if: env.debugSuccessful == 'true'
        name: Uploading a successful Debug build artifact.
        uses: actions/upload-artifact@v4.3.3
        with:
          name: SREngine Windows Debug
          path: '${{github.workspace}}/build-debug/Engine/SREngineDebugBuild'

      - if: env.releaseSuccessful == 'true'
        name: Uploading a successful Release build artifact.
        uses: actions/upload-artifact@v4.3.3
        with:
          name: SREngine Windows Release
          path: '${{github.workspace}}/build-release/Engine/SREngineReleaseBuild'

      - if: env.debugSuccessful == 'false' || inputs.artifactPush == 'true'
        name: Uploading a failed Debug build artifact.
        uses: actions/upload-artifact@v4.3.3
        with:
          name: 'SREngine Windows Failed Debug'
          path: '${{github.workspace}}/build-debug'

      - if: env.releaseSuccessful == 'false' || inputs.artifactPush == 'true'
        name: Uploading a failed Release build artifact.
        uses: actions/upload-artifact@v4.3.3
        with:
          name: 'SREngine Windows Failed Release'
          path: '${{github.workspace}}/build-release'
