name: SpaRcle Engine CI

on:
  push:
    branches:
    - master
    - dev
    - features/*
    
  pull_request:
    branches:
    - master
    - dev
    - features/*

jobs:  
  Preparing:
    name: Preparing and building.
    runs-on: windows-2022
    if:  "!contains(github.event.head_commit.message, '#SR_CI_NONE')"
    steps:
      - name: Fetching repository.
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Installing Vulkan.
        uses: TWoolhouse/setup-vulkan-sdk@v1.1.0
        with:
         version: 1.3.211.0

      - name: Preparing MSVC.
        uses: ilammy/msvc-dev-cmd@v1
        with:
         arch: 'amd64'
         vsversion: '2022'

      - name: Updating submodules.
        run: git submodule --quiet update --init --recursive --depth 1 --jobs 4

      - name: Installing Ninja.
        uses: ashutoshvarma/setup-ninja@v1.1
        with:
          version: '1.10.2'
          dest: '${{github.workspace}}/../ninja'

      - name: Creating Building Environment.
        run: |
         cmake -E make_directory ${{github.workspace}}/build
         cmake -E make_directory ${{github.workspace}}/build-release

      - if: "contains(github.event.head_commit.message, '#SR_CI_RELEASE')"
        name: Building Release.
        shell: bash
        working-directory: ${{github.workspace}}/build
        env:
          traceRelease:  true
        run: |
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Release "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4

      - if: "contains(github.event.head_commit.message, '#SR_CI_DEBUG')"
        name: Building Debug.
        shell: bash
        working-directory: ${{github.workspace}}/build
        env:
          traceDebug: true
        run: |
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4

      - if: "contains(github.event.head_commit.message, '#SR_CI_ALL')"
        name: Building All - Debug.
        shell: bash
        working-directory: ${{github.workspace}}/build
        env:
          traceDebug: true
        run: |
         cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
         cmake --build . -j 4

      - if: "contains(github.event.head_commit.message, '#SR_CI_ALL')"
        name: Building All - Release.
        shell: bash
        working-directory: ${{github.workspace}}/build-release
        env:
          traceRelease: true
        run: |
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Release "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4
          
      - if: env.traceDebug == 'true'      
        name: Creating a Debug Build Trace.
        shell: bash 
        working-directory: ${{github.workspace}}/CI
        run: ninjatracing.py ../build/.ninja_log > trace.json
        
      - if: env.traceRelease == 'true'      
        name: Creating a Release Build Trace.
        shell: bash 
        working-directory: ${{github.workspace}}/CI
        run: ninjatracing.py ../build-release/.ninja_log > trace-release.json
        
      - if: env.traceDebug == 'true'
        name: Uploading a Debug Build Trace Artifact.
        uses: actions/upload-artifact@v3
        with:
         name: 'SREngine Debug Build Trace Artifact'
         path: '${{github.workspace}}/CI/trace.json'
         
      - if: env.traceRelease == 'true'
        name: Uploading a Release Build Trace Artifact.
        uses: actions/upload-artifact@v3
        with:
         name: 'SREngine Release Build Trace Artifact'
         path: '${{github.workspace}}/CI/trace-release.json'
