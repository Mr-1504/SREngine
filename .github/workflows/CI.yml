name: SpaRcle Engine CI

on:
  push:
    branches:
    - master
    - dev
    - features/*
    
  pull_request:
    branches:
    - master
    - dev
    - features/*

jobs:  
  Preparing:
    name: Preparing and building.
    runs-on: windows-2022
    steps:
      - if:  "contains(github.event.head_commit.message, '#SR_CI_NONE')"
  
      - name: Fetching repository.
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
            
      - name: Installing Vulkan.
        uses: TWoolhouse/setup-vulkan-sdk@v1.1.0
        with:
          version: 1.3.211.0
          
      - name: Preparing MSVC.
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: 'amd64'
          vsversion: '2022'
        
      - name: Updating submodules.
        run: git submodule --quiet update --init --recursive --depth 1 --jobs 4

      - name: Installing Ninja.
        uses: ashutoshvarma/setup-ninja@v1.1
        with:
          version: '1.10.2'
          dest: '${{github.workspace}}/../ninja'
    
      - name: Creating Building Environment.
        run: cmake -E make_directory ${{github.workspace}}/build
        
      - if: "contains(github.event.head_commit.message, '#SR_CI_RELEASE')"
        name: Building Release.
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Release "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4

      - if: "contains(github.event.head_commit.message, '#SR_CI_DEBUG')"
        name: Building Debug.
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4

      - if: "contains(github.event.head_commit.message, '#SR_CI_ALL')"
        name: Building All - Debug.
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4
          cd ../
          git clean -fdx
          
      - if: "contains(github.event.head_commit.message, '#SR_CI_ALL')"
        name: Building All - Release.
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=Release "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4
      
      #- name: Testing
      #  working-directory: ${{github.workspace}}/build
      #  shell: bash
      #  # Execute tests defined by the CMake configuration.  
      # # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #  run: ctest -C $BUILD_TYPE
