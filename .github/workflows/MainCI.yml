name: SpaRcle Engine Main CI

on:
  push:
    paths-ignore:
      - 'Documentation/**'
      - '**.md'
    branches:
      - master
      - dev
      - features/*

  pull_request:
    paths-ignore:
      - 'Documentation/**'
      - '**.md'
    branches:
      - master
      - dev
      - features/*

jobs:
  Manage:
    name: Handle arguments and choose platform.
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '#SR_CI_NONE')"
    steps:
      - name: Fetching repository.
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - if: "contains(github.event.head_commit.message, '#SR_CI_RELEASE')"
        name: Handling "#SR_CI_RELEASE" argument.
        shell: bash
        run: |
          echo "buildRelease=true" >> "$GITHUB_ENV"

      - if: "contains(github.event.head_commit.message, '#SR_CI_DEBUG')"
        name: Handling "#SR_CI_DEBUG" argument.
        shell: bash
        run: |
          echo "buildDebug=true" >> "$GITHUB_ENV"

      - if: "contains(github.event.head_commit.message, '#SR_CI_ALL')"
        name: Handling "#SR_CI_ALL" argument.
        shell: bash
        run: |
          echo "buildRelease=true" >> "$GITHUB_ENV"
          echo "buildDebug=true" >> "$GITHUB_ENV"

      - if: "contains(github.event.head_commit.message, '#SR_CI_ARTIFACT')"
        name: Handling "#SR_CI_ARTIFACT" argument.
        shell: bash
        run: |
          echo "artifactPush=true" >> "$GITHUB_ENV"

      - if: "contains(github.event.head_commit.message, '#SR_CI_LINUX')"
        name: Handling "#SR_CI_LINUX" argument.
        shell: bash
        run: |
          echo "buildLinux=true" >> "$GITHUB_ENV"

      - if: "contains(github.event.head_commit.message, '#SR_CI_WINDOWS')"
        name: Handling "#SR_CI_WINDOWS" argument.
        shell: bash
        run: |
          echo "buildWindows=true" >> "$GITHUB_ENV"

      - if: env.buildRelease != 'true' && env.buildDebug != 'true'
        name: Setting default build type.
        shell: bash
        run: |
          echo "buildDebug=true" >> "$GITHUB_ENV"

      - if: env.buildWindows != 'true' && env.buildLinux != 'true'
        name: Setting default platform type.
        shell: bash
        run: |
          echo "buildWindows=true" >> "$GITHUB_ENV"
          echo "buildLinux=true" >> "$GITHUB_ENV"

      - if: env.buildWindows == 'true'
        name: Run Windows Workflow.
        uses: ./.github/workflows/WindowsCI.yml
        with:
          buildRelease: env.buildRelease
          buildDebug: env.buildDebug
          artifactPush: env.artifactPush

      - if: env.buildLinux == 'true'
        name: Run Linux Workflow.
        uses: ./.github/workflows/LinuxCI.yml
        with:
          buildRelease: env.buildRelease
          buildDebug: env.buildDebug
          artifactPush: env.artifactPush
