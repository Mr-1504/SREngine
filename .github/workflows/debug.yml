name: SpaRcle Engine CI Debug

on:
  push:
    branches:
    - dev
    - features/*
    
  pull_request:
    branches:
    - master
    - dev

env:
  BUILD_TYPE: Debug

jobs:
  Preparing_Building:
    name: Preparing and Building
    runs-on: windows-2022

    steps:
      - name: Getting arguments
        uses: rlespinasse/git-commit-data-action@v1.5.0
        env: 
          BODY: ${{ env.GIT_COMMIT_MESSAGE_BODY }}
    
      - name: Handling arguments 
        #shell: bash
        #run: | 
        #  cd CI
        #  arguments_handling.py ${BODY}
        run: echo ${{ env.GIT_COMMIT_MESSAGE_BODY }}
    
      - name: Fetching repo and installing Vulkan SDK
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: TWoolhouse/setup-vulkan-sdk@v1.1.0
        with:
          # SDK Version to install
          version: 1.3.211.0
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: 'amd64'
          vsversion: '2022'
        
      - name: Updating submodules
        run: git submodule --quiet update --init --recursive --depth 1 --jobs 4

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@v1.1
        with:
          version: '1.10.2'
          dest: '${{github.workspace}}/../ninja'
          
      #- name : Setup CMake 
      #  uses: jwlawson/actions-setup-cmake@v1.13
      #  with:
      #    cmake-version: '3.25.2'
          
      - name: Creating Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configuring and Building
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake -G "Ninja" ../ -DCMAKE_BUILD_TYPE=$BUILD_TYPE "-DCMAKE_MAKE_PROGRAM=${{github.workspace}}/../ninja/ninja.exe" 
          cmake --build . -j 4
      
      - name: Testing
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE
