ShaderType PostProcessing;

PolygonMode Fill;
CullMode Back;
DepthCompare LessOrEqual;
PrimitiveTopology TriangleList;
BlendEnabled false;
DepthWrite false;
DepthTest false;

[[uniform]] sampler2DArray depthMap;
[[shared]] vec2 uv;

void fragment() {
    float d = texture(depthMap, vec3(uv, 0.0)).x;
    COLOR_INDEX_0 = vec4(d, d, d, 1.0);
}

void vertex() {
    uv = vec2((VERTEX_INDEX << 1) & 2, VERTEX_INDEX & 2);
    OUT_POSITION = vec4(uv * 2.0 - 1.0, 0.0, 1.0);
}