ShaderType Canvas;

PolygonMode Fill;
CullMode Back;
DepthCompare LessOrEqual;
PrimitiveTopology TriangleStrip;
BlendEnabled false;
DepthWrite true;
DepthTest true;

[[uniform], [public]] vec4 color = vec4(1.0, 1.0, 1.0, 1.0);
[[uniform], [public]] sampler2D diffuse;

[[shared]] vec2 UV;

void fragment() {
	COLOR = texture(diffuse, vec2(1.0 - UV.x, 1.0 - UV.y)) * color;

    if (COLOR.a < 0.8) {
        discard;
    }
}

void vertex() {
    #include <Engine/Shaders/UI/sprite-vertices.inl.srsl>
    UV = uv[VERTEX_INDEX];
    OUT_POSITION = ORTHOGONAL_MATRIX * MODEL_MATRIX * vec4(vertices[VERTEX_INDEX], 1.0);
}