ShaderType Skinned;

PolygonMode Fill;
CullMode Back;
DepthCompare LessOrEqual;
PrimitiveTopology TriangleList;
BlendEnabled true;
DepthWrite false;
DepthTest true;
 
[[uniform], [public]] vec4 color;
[[uniform], [public]] sampler2D diffuse;

[[ssbo(bones)]] mat4[] bones;
[[ssbo(offsets)]] mat4[] boneOffsets;

void fragment() {
	COLOR = texture(diffuse, UV) * color;
}

void vertex() {
    #include <Engine/Shaders/Skinned/bone-transform.inl.srsl>

    VERTEX = (boneTransform * vec4(VERTEX, 1.0)).xyz;
    OUT_POSITION = PROJECTION_MATRIX * VIEW_MATRIX * vec4(VERTEX, 1.0);
}